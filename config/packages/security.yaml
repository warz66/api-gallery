security:
    encoders:
        Symfony\Component\Security\Core\User\User: bcrypt
        App\Entity\User:
            algorithm: bcrypt

    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        chain_provider:
            chain:
                providers: ['users_in_memory', 'in_database']
        users_in_memory:
            memory:
                users:
                    superadmin@symfony.com: { password: '$2y$13$BjqF6uc2W/RurtYAqDdQmu3gFqX3/gbO2B8FkNVtM65.pPp3HLw36', roles: ['ROLE_SUPER_ADMIN'] }
        in_database:
            entity:
                class: App\Entity\User
                property: email

    role_hierarchy:
        ROLE_EDITEUR : ROLE_USER
        ROLE_ADMIN: ROLE_EDITEUR
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        admin:
            pattern: ^/(admin)
            anonymous: true
            lazy: true

            provider: chain_provider

            form_login:
                #default_target_path: admin_ads_index
                login_path: admin_account_login
                check_path: admin_account_login

            logout:
                path: admin_account_logout
                target: admin_account_login
            guard:
                authenticators:
                    - App\Security\LoginFormAuthenticator

            switch_user: true
        
        login:
            pattern: ^/api/login
            anonymous: true
            stateless: true
            provider: chain_provider
            json_login:
                check_path: /api/login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:   ^/api
            stateless: true
            anonymous: true
            provider: chain_provider
            guard:
                authenticators: 
                    - lexik_jwt_authentication.jwt_token_authenticator

        main:
            anonymous: true # ~
            lazy: true
            provider: users_in_memory

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/galeries,       roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/api/images,       roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/user, roles: ROLE_ADMIN }
        - { path: ^/admin, roles: ROLE_EDITEUR }
